{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\reducer-context\\\\src\\\\NumberGuessingGameLimit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberGuessingGameLimit = () => {\n  _s();\n  const randomNumber = () => {\n    return Math.floor(Math.random() * 50) + 1; // +1을 붙여주지 않으면 자리값이 0~49까지 되어버림.\n  };\n  const [targetNumber, setTargetNumber] = useState(randomNumber()); // targetNumber에 랜덤으로 생성된 숫자값이 들어갈 수 있도록 설정\n  const [userGuess, setUserGuess] = useState('');\n  const [message, setMessage] = useState('');\n\n  //횟수 제한\n  const [attempts, SetAttempts] = useState(5);\n\n  //내가 작성한 숫자 기록\n  const [guessHistory, SetGuessHistory] = useState([]);\n\n  //useEffect 를 활용해서 게임 횟수 제한\n  useEffect(() => {\n    //만약 횟수가 끝났다면\n    if (attempts === 0) {\n      setMessage(`게임오버. 정답은 ${targetNumber} 입니다.`);\n      //게임이 종료되었으니 숫자 랜덤으로 다시 생성하고\n      setTargetNumber(randomNumber());\n      //횟수는 다시 5회로 만들어주고\n      SetAttempts(5);\n      //사용자가 작성한 기록은 모두 지움\n      SetGuessHistory([]);\n    }\n  }, [attempts, targetNumber]);\n\n  // 숫자값이 들어올 때마다 숫자값 변경해주는 함수\n  const inputChange = event => {\n    setUserGuess(event.target.value);\n  };\n\n  // 숫자값 전달\n  const inputSubmit = event => {\n    event.preventDefault(); // 페이지가 다시 로딩되는 것을 방지. 페이지가 자동으로 새로고침 되는 것을 막아주는 역할.\n\n    // 사용자가 입력한 값을 숫자로 변환해주는 역할\n    const guess = parseInt(userGuess, 10); // 10진수 : 우리가 흔히 사용하는 0 ~ 9 숫자를 의미\n\n    // NaN = Not a Number\n    if (isNaN(guess)) {\n      // isNaN : 주어진 값이 숫자가 맞는지 숫자가 아닌지 판별하는 역할.\n      setMessage('숫자만 입력이 가능합니다!');\n    } else {\n      //사용자가 작성한 숫자값을 기록하는 함수 생성\n      const newGuessHistory = [...guessHistory, guess];\n      SetGuessHistory(newGuessHistory);\n      if (guess === targetNumber) {\n        setMessage(`정답입니다 ! 정답 숫자는 : ${targetNumber}`);\n        setTargetNumber(randomNumber());\n        //숫자를 맞췄기때문에 초기화 작업\n        setTargetNumber(randomNumber());\n        SetAttempts(5);\n        SetGuessHistory([]);\n      } else {\n        //숫자가 틀렸을 때 횟수를 차감하는 함수 작성\n        const remainAttempts = attempts - 1;\n        SetAttempts(remainAttempts);\n        if (remainAttempts === 0) {\n          setMessage(`게임오버. 정답은 ${targetNumber} 입니다.`);\n          setTargetNumber(randomNumber());\n          SetAttempts(5);\n          SetGuessHistory([]);\n        } else {\n          setMessage(guess < targetNumber ? '숫자가 정답보다 높습니다.' : '숫자가 정답보다 낮습니다.');\n        }\n      }\n      // input값 알아서 지워질 수 있도록 초기화 설정\n      setUserGuess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC22B\\uC790 \\uB9DE\\uCD94\\uAE30 \\uAC8C\\uC784 !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"1\\uBD80\\uD130 100 \\uC0AC\\uC774 \\uC22B\\uC790 \\uB9DE\\uCD94\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: inputSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: userGuess,\n        onChange: inputChange,\n        placeholder: \"\\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        min: 1,\n        max: 100,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC81C\\uCD9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A8\\uC740 \\uAE30\\uD68C : \", attempts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC785\\uB825\\uD55C \\uC22B\\uC790 : \", guessHistory.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberGuessingGameLimit, \"GvQUVgb/vOwJoaGk6Yj+29rh1cI=\");\n_c = NumberGuessingGameLimit;\nexport default NumberGuessingGameLimit;\nvar _c;\n$RefreshReg$(_c, \"NumberGuessingGameLimit\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NumberGuessingGameLimit","_s","randomNumber","Math","floor","random","targetNumber","setTargetNumber","userGuess","setUserGuess","message","setMessage","attempts","SetAttempts","guessHistory","SetGuessHistory","inputChange","event","target","value","inputSubmit","preventDefault","guess","parseInt","isNaN","newGuessHistory","remainAttempts","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","min","max","required","join","_c","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/reducer-context/src/NumberGuessingGameLimit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst NumberGuessingGameLimit = () => {\r\n  const randomNumber = () => {\r\n    return Math.floor(Math.random() * 50) + 1; // +1을 붙여주지 않으면 자리값이 0~49까지 되어버림.\r\n  };\r\n\r\n  const [targetNumber, setTargetNumber] = useState(randomNumber()); // targetNumber에 랜덤으로 생성된 숫자값이 들어갈 수 있도록 설정\r\n  const [userGuess, setUserGuess] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  //횟수 제한\r\n  const [attempts, SetAttempts] = useState(5);\r\n\r\n  //내가 작성한 숫자 기록\r\n  const [guessHistory, SetGuessHistory] = useState([]);\r\n\r\n  //useEffect 를 활용해서 게임 횟수 제한\r\n  useEffect(() => {\r\n    //만약 횟수가 끝났다면\r\n    if (attempts === 0) {\r\n      setMessage(`게임오버. 정답은 ${targetNumber} 입니다.`);\r\n      //게임이 종료되었으니 숫자 랜덤으로 다시 생성하고\r\n      setTargetNumber(randomNumber());\r\n      //횟수는 다시 5회로 만들어주고\r\n      SetAttempts(5);\r\n      //사용자가 작성한 기록은 모두 지움\r\n      SetGuessHistory([]);\r\n    }\r\n  }, [attempts, targetNumber]);\r\n\r\n  // 숫자값이 들어올 때마다 숫자값 변경해주는 함수\r\n  const inputChange = (event) => {\r\n    setUserGuess(event.target.value);\r\n  };\r\n\r\n  // 숫자값 전달\r\n  const inputSubmit = (event) => {\r\n    event.preventDefault(); // 페이지가 다시 로딩되는 것을 방지. 페이지가 자동으로 새로고침 되는 것을 막아주는 역할.\r\n\r\n    // 사용자가 입력한 값을 숫자로 변환해주는 역할\r\n    const guess = parseInt(userGuess, 10); // 10진수 : 우리가 흔히 사용하는 0 ~ 9 숫자를 의미\r\n\r\n    // NaN = Not a Number\r\n    if (isNaN(guess)) {\r\n      // isNaN : 주어진 값이 숫자가 맞는지 숫자가 아닌지 판별하는 역할.\r\n      setMessage('숫자만 입력이 가능합니다!');\r\n    } else {\r\n      //사용자가 작성한 숫자값을 기록하는 함수 생성\r\n      const newGuessHistory = [...guessHistory, guess];\r\n      SetGuessHistory(newGuessHistory);\r\n\r\n      if (guess === targetNumber) {\r\n        setMessage(`정답입니다 ! 정답 숫자는 : ${targetNumber}`);\r\n        setTargetNumber(randomNumber());\r\n        //숫자를 맞췄기때문에 초기화 작업\r\n        setTargetNumber(randomNumber());\r\n        SetAttempts(5);\r\n        SetGuessHistory([]);\r\n      } else {\r\n        //숫자가 틀렸을 때 횟수를 차감하는 함수 작성\r\n        const remainAttempts = attempts - 1;\r\n        SetAttempts(remainAttempts);\r\n\r\n        if (remainAttempts === 0) {\r\n          setMessage(`게임오버. 정답은 ${targetNumber} 입니다.`);\r\n          setTargetNumber(randomNumber());\r\n          SetAttempts(5);\r\n          SetGuessHistory([]);\r\n        } else {\r\n          setMessage(\r\n            guess < targetNumber\r\n              ? '숫자가 정답보다 높습니다.'\r\n              : '숫자가 정답보다 낮습니다.'\r\n          );\r\n        }\r\n      }\r\n      // input값 알아서 지워질 수 있도록 초기화 설정\r\n      setUserGuess('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>숫자 맞추기 게임 !</h1>\r\n      <p>1부터 100 사이 숫자 맞추기</p>\r\n      <form onSubmit={inputSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          value={userGuess}\r\n          onChange={inputChange}\r\n          placeholder=\"숫자를 입력하세요.\"\r\n          min={1}\r\n          max={100}\r\n          required\r\n        />\r\n        <button type=\"submit\">제출</button>\r\n      </form>\r\n      <div>\r\n        <p>남은 기회 : {attempts}</p>\r\n        <p>입력한 숫자 : {guessHistory.join(', ')}</p>\r\n      </div>\r\n      {message && <div>{message}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default NumberGuessingGameLimit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}