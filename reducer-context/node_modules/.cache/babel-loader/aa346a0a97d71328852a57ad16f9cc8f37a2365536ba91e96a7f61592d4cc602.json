{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\reducer-context\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//부모 컴포넌트에서 createContext 로 생성한 Context 객체를 자식 컴포넌트에서 쉽게 사용할 수 있도록 만들어진 hook.\n//useContext 를 사용하면 데이터를 전달하기위해 props 를 사용하지 않아도 됨.\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  //light 와 dark 색상 지정해주는 함수 만들기\n  const themeStyles = {\n    light: {\n      backgroundColor: '#fff',\n      color: '#333'\n    },\n    dark: {\n      backgroundColor: '#333',\n      color: '#fff'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...themeStyles[theme],\n        minHeight: '100vh'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n//현재 사용하는 테마 함수\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","toggleTheme","prevTheme","themeStyles","light","backgroundColor","color","dark","Provider","value","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/reducer-context/src/ThemeContext.js"],"sourcesContent":["//부모 컴포넌트에서 createContext 로 생성한 Context 객체를 자식 컴포넌트에서 쉽게 사용할 수 있도록 만들어진 hook.\r\n//useContext 를 사용하면 데이터를 전달하기위해 props 를 사용하지 않아도 됨.\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState('light');\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  //light 와 dark 색상 지정해주는 함수 만들기\r\n  const themeStyles = {\r\n    light: {\r\n      backgroundColor: '#fff',\r\n      color: '#333',\r\n    },\r\n    dark: {\r\n      backgroundColor: '#333',\r\n      color: '#fff',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <div style={{ ...themeStyles[theme], minHeight: '100vh' }}>\r\n        {children}\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n//현재 사용하는 테마 함수\r\nexport const useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE;MACLC,eAAe,EAAE,MAAM;MACvBC,KAAK,EAAE;IACT,CAAC;IACDC,IAAI,EAAE;MACJF,eAAe,EAAE,MAAM;MACvBC,KAAK,EAAE;IACT;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEE;IAAY,CAAE;IAAAJ,QAAA,eACnDH,OAAA;MAAKgB,KAAK,EAAE;QAAE,GAAGP,WAAW,CAACJ,KAAK,CAAC;QAAEY,SAAS,EAAE;MAAQ,CAAE;MAAAd,QAAA,EACvDA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B,CAAC;;AAED;AAAAjB,EAAA,CA3BaF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA4B1B,OAAO,MAAMqB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAO3B,UAAU,CAACI,YAAY,CAAC;AACjC,CAAC;AAACuB,GAAA,CAFWD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}