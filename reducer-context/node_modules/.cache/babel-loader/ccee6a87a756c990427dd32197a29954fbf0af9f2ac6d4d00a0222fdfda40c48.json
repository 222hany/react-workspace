{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\reducer-context\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const questions = [{\n    id: 1,\n    question: 'React는 어떤 라이브러리 인가요?',\n    options: ['UI 라이브러리', '모두'],\n    correctAnswer: 'UI 라이브러리'\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, SetScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const AnswerButtonClick = selectedOption => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      SetScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  //다시 시작하는 버튼을 누르면 점수와 퀴즈 상태 모두 처음으로 돌아가기\n  const restartQuiz = () => {\n    setCurrentQuestion(0);\n    SetScore(0);\n    setShowScore(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uC810\\uC218 : \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        children: \"\\uC7AC\\uB3C4\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uC9C8\\uBB38 : \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: questions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => AnswerButtonClick(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Quiz, \"L3CNrEyLsh3BCT0xDU6SRVAXRA8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","id","question","options","correctAnswer","currentQuestion","setCurrentQuestion","score","SetScore","showScore","setShowScore","AnswerButtonClick","selectedOption","nextQuestion","length","restartQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","_c","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/reducer-context/src/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Quiz = () => {\r\n  const questions = [\r\n    {\r\n      id: 1,\r\n      question: 'React는 어떤 라이브러리 인가요?',\r\n      options: ['UI 라이브러리', '모두'],\r\n      correctAnswer: 'UI 라이브러리',\r\n    },\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, SetScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  const AnswerButtonClick = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n      SetScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  //다시 시작하는 버튼을 누르면 점수와 퀴즈 상태 모두 처음으로 돌아가기\r\n  const restartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    SetScore(0);\r\n    setShowScore(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showScore ? (\r\n        <div>\r\n          <h2>\r\n            점수 : {score} / {questions.length}\r\n          </h2>\r\n          <button onClick={restartQuiz}>재도전</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div>\r\n            <h2>질문 : {currentQuestion + 1}</h2>\r\n          </div>\r\n          <div>\r\n            {questions[currentQuestion].options.map((option) => (\r\n              <button key={option} onClick={() => AnswerButtonClick(option)}>\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}