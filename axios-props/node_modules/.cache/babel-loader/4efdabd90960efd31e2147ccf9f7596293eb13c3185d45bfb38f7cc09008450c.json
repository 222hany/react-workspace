{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\axios-props\\\\src\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //부모\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n\n  //외부에서 API를 통해 영화 데이터를 가져오고 내가 원하는 내용만 보여주고싶다 => then에 요청.\n  useEffect(() => {\n    axios.get('https://yts.mx/api/v2/list_movies.json').then(response => {\n      //가져온 데이터 중 필요한 정보만 가져와서 업데이트\n      const movieData = response.data.data.movies.map(movie => ({\n        id: movie.id,\n        title: movie.title,\n        rating: movie.rating,\n        poster: movie.medium_cover_image\n      }));\n      setMovies(movieData);\n    }).catch(error => {\n      console.log('데이터 없음', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieCard","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","get","then","response","movieData","data","map","movie","id","title","rating","poster","medium_cover_image","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/axios-props/src/MovieList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'; //부모\r\nimport MovieCard from './MovieCard';\r\n\r\nconst MovieList = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    //외부에서 API를 통해 영화 데이터를 가져오고 내가 원하는 내용만 보여주고싶다 => then에 요청.\r\n    useEffect(() => {\r\n        axios.get('https://yts.mx/api/v2/list_movies.json')\r\n        .then(response => {\r\n            //가져온 데이터 중 필요한 정보만 가져와서 업데이트\r\n            const movieData = response.data.data.movies.map(movie => ({\r\n                id : movie.id, \r\n                title : movie.title,\r\n                rating : movie.rating,\r\n                poster : movie.medium_cover_image\r\n            }));\r\n            setMovies(movieData);\r\n        })\r\n        .catch(error => {\r\n            console.log('데이터 없음', error);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            {movies.map(movie => (\r\n                <MovieCard key={movie.id} movie={movie}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACQ,GAAG,CAAC,wCAAwC,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAI;MACd;MACA,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACN,MAAM,CAACO,GAAG,CAACC,KAAK,KAAK;QACtDC,EAAE,EAAGD,KAAK,CAACC,EAAE;QACbC,KAAK,EAAGF,KAAK,CAACE,KAAK;QACnBC,MAAM,EAAGH,KAAK,CAACG,MAAM;QACrBC,MAAM,EAAGJ,KAAK,CAACK;MACnB,CAAC,CAAC,CAAC;MACHZ,SAAS,CAACI,SAAS,CAAC;IACxB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAAqB,QAAA,EACKlB,MAAM,CAACO,GAAG,CAACC,KAAK,iBACbX,OAAA,CAACF,SAAS;MAAgBa,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CA5BKD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}