{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\react-workspace\\\\axios-props\\\\src\\\\PostComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostComment = () => {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const [PostComments, setPostComments] = useState([]);\n\n  //API를 2개 이상 가져올 경우\n  useEffect(() => {\n    axios.all([axios.get('https://jsonplaceholder.typicode.com/users'), axios.get('https://jsonplaceholder.typicode.com/comments')])\n    //데이터를 성공적으로 가져왔을 때\n    .then(axios.spread((usersReponse, commentsResponse) => {\n      //axios.spread : 여러가지 응답을 개별 응답으로 나눠서 제공된 set 함수에 전달하는 역할.\n      setUserData(usersReponse.data);\n      setPostComments(commentsResponse.data);\n    })).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC720\\uC800 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), userData.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.name\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB313\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), PostComments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.body\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(PostComment, \"aPClMliTQ7AZbsqnwcg13xMA+tE=\");\n_c = PostComment;\nexport default PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PostComment","_s","userData","setUserData","PostComments","setPostComments","all","get","then","spread","usersReponse","commentsResponse","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","id","comment","body","_c","$RefreshReg$"],"sources":["C:/Users/user1/react-workspace/axios-props/src/PostComment.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PostComment = () => {\r\n    const [userData, setUserData] = useState([]);\r\n    const [PostComments, setPostComments] = useState([]);\r\n\r\n    //API를 2개 이상 가져올 경우\r\n    useEffect(() => {\r\n        axios.all([\r\n            axios.get('https://jsonplaceholder.typicode.com/users'),\r\n            axios.get('https://jsonplaceholder.typicode.com/comments')\r\n        ])\r\n        //데이터를 성공적으로 가져왔을 때\r\n        .then(axios.spread((usersReponse, commentsResponse) => { //axios.spread : 여러가지 응답을 개별 응답으로 나눠서 제공된 set 함수에 전달하는 역할.\r\n            setUserData(usersReponse.data);\r\n            setPostComments(commentsResponse.data);\r\n        }))\r\n        .catch(error => console.error(error));\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <h2>유저 정보</h2>\r\n            {userData.map(user => (\r\n                <p key={user.id}>{user.name}</p>\r\n            ))}\r\n\r\n            <h2>댓글</h2>\r\n            {PostComments.map(comment => (\r\n                <p key={comment.id}>{comment.body}</p>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostComment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACW,GAAG,CAAC,CACNX,KAAK,CAACY,GAAG,CAAC,4CAA4C,CAAC,EACvDZ,KAAK,CAACY,GAAG,CAAC,+CAA+C,CAAC,CAC7D;IACD;IAAA,CACCC,IAAI,CAACb,KAAK,CAACc,MAAM,CAAC,CAACC,YAAY,EAAEC,gBAAgB,KAAK;MAAE;MACrDR,WAAW,CAACO,YAAY,CAACE,IAAI,CAAC;MAC9BP,eAAe,CAACM,gBAAgB,CAACC,IAAI,CAAC;IAC1C,CAAC,CAAC,CAAC,CACFC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACblB,QAAQ,CAACmB,GAAG,CAACC,IAAI,iBACdzB,OAAA;MAAAmB,QAAA,EAAkBM,IAAI,CAACC;IAAI,GAAnBD,IAAI,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAClC,CAAC,eAEFvB,OAAA;MAAAmB,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACVhB,YAAY,CAACiB,GAAG,CAACI,OAAO,iBACrB5B,OAAA;MAAAmB,QAAA,EAAqBS,OAAO,CAACC;IAAI,GAAzBD,OAAO,CAACD,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACxC,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAAnB,EAAA,CA/BKD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}